name: CI

on: push

env:
  BUN_VERSION: '1.0.22'
  FILE_PATH_VERSION_INFO: ./src/common/utils/version-info.ts

jobs:
  build:
    name: Build 🏗️
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: Build 🏗️
        run: bun run build

  lint:
    name: Lint ✅
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: Lint ✅
        run: bun run lint

  tsc:
    name: TypeScript Compiler 🔎
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: TypeScript Compiler 🔎
        run: bun run tsc

  test:
    name: Test 🧪
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: Test 🧪
        run: bun run test-coverage

  npm-release:
    name: npm release 📦
    needs: [build, lint, tsc, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: Version Info 💉
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          VERSION_SPACES=$(bun run semantic-release --dryRun | grep -oP 'Published release \K.*? ')
          VERSION="${VERSION_SPACES// /}"
          echo "export const VERSION_INFO = 'v$VERSION';" > $FILE_PATH_VERSION_INFO
          cat $FILE_PATH_VERSION_INFO

      - name: Build 🏗️
        run: bun run build

      - name: Release 🚀
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: bun run semantic-release

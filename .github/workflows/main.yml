name: main

on:
  push:
    branches:
      - main

env:
  BUN_VERSION: '1.1.34'
  FILE_PATH_VERSION_INFO: ./src/common/utils/version-info.ts

jobs:
  build:
    name: Build 🏗️
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: REMOVE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Run semantic-release in dry-run mode, ignoring any errors
          OUTPUT=$(npx semantic-release --branches main --dry-run || true)

          # Extract the next version from the output
          NEXT_VERSION=$(echo "$OUTPUT" | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+')

          # If no version is found, handle gracefully
          if [ -z "$NEXT_VERSION" ]; then
            echo "No new version to release."
            NEXT_VERSION="0.0.0"  # Default version or custom handling
          fi

          # Output the next version
          echo "Next version: $NEXT_VERSION"

      - name: Build 🏗️
        run: bun run build

  lint:
    name: Lint ✅
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: Lint ✅
        run: bun run lint

  tsc:
    name: TypeScript Compiler 🔎
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: TypeScript Compiler 🔎
        run: bun run tsc

  test:
    name: Test 🧪
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: Test 🧪
        run: bun run test-coverage

  release-npm:
    name: Release npm 📦
    needs: [build, lint, tsc, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Bun ⚙️
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies 🔧
        run: bun i

      - name: Version Info 💉
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx semantic-release --branches main --dry-run
          VERSION_SPACES=$(bun run release --dry-run | grep -oP 'Published release \K.*? ')
          VERSION="${VERSION_SPACES// /}"
          echo "export const VERSION_INFO = 'v$VERSION';" > $FILE_PATH_VERSION_INFO
          cat $FILE_PATH_VERSION_INFO

      - name: Build 🏗️
        run: bun run build

      - name: Release 🚀
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: bun run release
